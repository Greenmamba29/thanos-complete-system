"use strict";(()=>{var e={};e.id=995,e.ids=[995],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8809:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>h,patchFetch:()=>f,requestAsyncStorage:()=>c,routeModule:()=>d,serverHooks:()=>g,staticGenerationAsyncStorage:()=>l});var a={};r.r(a),r.d(a,{GET:()=>u});var o=r(9182),n=r(2007),i=r(6719),s=r(3442);let p=new(r(3524)).PrismaClient;async function u(){try{let e=(await p.organization.findMany({orderBy:{createdAt:"desc"},take:20})).map(e=>({id:e.id,name:e.name,description:e.description||"",status:e.status,filesProcessed:e.filesProcessed,totalFiles:e.totalFiles,beforeSnapshot:JSON.parse(e.beforeSnapshot),afterSnapshot:JSON.parse(e.afterSnapshot),createdAt:e.createdAt,isUndone:e.isUndone}));return s.NextResponse.json({organizations:e})}catch(e){return console.error("Organizations fetch error:",e),s.NextResponse.json({error:"Failed to fetch organizations"},{status:500})}finally{await p.$disconnect()}}let d=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/organizations/route",pathname:"/api/organizations",filename:"route",bundlePath:"app/api/organizations/route"},resolvedPagePath:"/home/ubuntu/thanos_file_organizer/app/app/api/organizations/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:l,serverHooks:g}=d,h="/api/organizations/route";function f(){return(0,i.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:l})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[412,609],()=>r(8809));module.exports=a})();