"use strict";(()=>{var e={};e.id=961,e.ids=[961],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1647:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>m,patchFetch:()=>g,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>h,staticGenerationAsyncStorage:()=>d});var a={};r.r(a),r.d(a,{GET:()=>p});var o=r(9182),s=r(2007),n=r(6719),i=r(3442);let u=new(r(3524)).PrismaClient;async function p(){try{let e=await u.fileRecord.count({where:{isDeleted:!1}}),t=await u.fileRecord.count({where:{isDeleted:!1,organizationId:{not:null}}}),r=await u.organization.count({where:{status:"completed"}});return i.NextResponse.json({totalFiles:e,organizedFiles:t,totalOrganizations:r,avgProcessingTime:Math.floor(10*Math.random())+2})}catch(e){return console.error("Stats error:",e),i.NextResponse.json({error:"Failed to fetch stats"},{status:500})}finally{await u.$disconnect()}}let l=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/stats/route",pathname:"/api/stats",filename:"route",bundlePath:"app/api/stats/route"},resolvedPagePath:"/home/ubuntu/thanos_file_organizer/app/app/api/stats/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:d,serverHooks:h}=l,m="/api/stats/route";function g(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:d})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[412,609],()=>r(1647));module.exports=a})();