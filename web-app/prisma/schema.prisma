generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
    output = "/home/ubuntu/thanos_file_organizer/app/node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model FileRecord {
  id                String   @id @default(cuid())
  originalName      String
  currentName       String
  originalPath      String
  currentPath       String
  fileType          String
  fileSize          Int
  mimeType          String
  category          String?
  subcategory       String?
  tags              String   
  metadata          String   
  uploadedAt        DateTime @default(now())
  lastModified      DateTime @updatedAt
  isDeleted         Boolean  @default(false)
  organizationId    String?
  
  organization      Organization? @relation(fields: [organizationId], references: [id], onDelete: SetNull)
  
  @@map("file_records")
}

model Organization {
  id              String   @id @default(cuid())
  name            String
  description     String?
  createdAt       DateTime @default(now())
  status          String   @default("completed")
  filesProcessed  Int      @default(0)
  totalFiles      Int      @default(0)
  beforeSnapshot  String   
  afterSnapshot   String   
  isUndone        Boolean  @default(false)
  
  files           FileRecord[]
  
  @@map("organizations")
}

model ProcessingJob {
  id          String   @id @default(cuid())
  status      String   @default("pending")
  progress    Int      @default(0)
  message     String?
  startedAt   DateTime @default(now())
  completedAt DateTime?
  errorLog    String?
  filesCount  Int      @default(0)
  
  @@map("processing_jobs")
}
